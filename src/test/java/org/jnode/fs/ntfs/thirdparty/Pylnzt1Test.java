package org.jnode.fs.ntfs.thirdparty;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.containsString;
import static org.hamcrest.Matchers.is;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import org.jnode.fs.FileSystemTestUtils;
import org.jnode.fs.ntfs.datarun.CompressedDataRun;
import org.jnode.fs.ntfs.datarun.CompressedDataRun2;
import org.jnode.fs.ntfs.datarun.CompressedDataRunOriginal;
import org.jnode.fs.ntfs.datarun.CompressedDataRunPyLznt1;
import org.junit.Test;

/**
 *
 * Tests for https://pypi.org/project/lznt1/
 * It's https://github.com/you0708/lznt1/blob/master/lznt1.py
 * It meant to work, but it doesn't work with our test data somehow (maybe because we didn't translate to java correctly?).
 * Also, we generated some test data using it.
 * Still debugging it.
 */
public class Pylnzt1Test {

    // the original jnode code, the data is generated by python lznt. It doesn't work..
    @Test
    public void testDecompression_the_original_jnode() throws IOException {
        byte[] compressed = FileSystemTestUtils.readFileToByteArray("/Users/tli01/work/nuix/jnode-fs/src/test/resources/org/jnode/fs/ntfs/compressed.bin");
        byte[] uncompressed = new byte[0x200000];

        // Act
        CompressedDataRunOriginal.unCompressUnit(compressed, uncompressed);

        byte[] expectedUncompressed = FileSystemTestUtils.readFileToByteArray("/Users/tli01/work/nuix/jnode-fs/src/test/resources/org/jnode/fs/ntfs/decompressed.bin");
        for (int i = 0; i < expectedUncompressed.length; i++) {
            assertThat((uncompressed[i] == expectedUncompressed[i]), is(true));
        }
        // Assert
        String uncompressedContent = new String(uncompressed, StandardCharsets.US_ASCII);
        assertThat(uncompressedContent, containsString("% matrix llx lly urx ury string")); // Near the end of the chunk
    }

    // the latest new code, the data is generated by python lznt. It doesn't work..
    @Test
    public void testDecompression_data_generated_by_python_lznt() throws IOException {
        byte[] compressed = FileSystemTestUtils.readFileToByteArray("/Users/tli01/work/nuix/jnode-fs/src/test/resources/org/jnode/fs/ntfs/compressed.bin");
        byte[] uncompressed = new byte[0x200000];

        // Act
        CompressedDataRun.unCompressUnit(compressed, uncompressed);

        byte[] expectedUncompressed = FileSystemTestUtils.readFileToByteArray("/Users/tli01/work/nuix/jnode-fs/src/test/resources/org/jnode/fs/ntfs/decompressed.bin");
        for (int i = 0; i < expectedUncompressed.length; i++) {
            assertThat((uncompressed[i] == expectedUncompressed[i]), is(true));
        }
        // Assert
        String uncompressedContent = new String(uncompressed, StandardCharsets.US_ASCII);
        assertThat(uncompressedContent, containsString("% matrix llx lly urx ury string")); // Near the end of the chunk
    }

    // the code shown to Luke before, the data is generated by python lznt. It doesn't work..
    @Test
    public void testDecompression_luke() throws IOException {
        byte[] compressed = FileSystemTestUtils.readFileToByteArray("/Users/tli01/work/nuix/jnode-fs/src/test/resources/org/jnode/fs/ntfs/compressed.bin");
        byte[] uncompressed = new byte[0x200000];

        // Act
        CompressedDataRun2.unCompressUnit(compressed, uncompressed);

        byte[] expectedUncompressed = FileSystemTestUtils.readFileToByteArray("/Users/tli01/work/nuix/jnode-fs/src/test/resources/org/jnode/fs/ntfs/decompressed.bin");
        for (int i = 0; i < expectedUncompressed.length; i++) {
            assertThat((uncompressed[i] == expectedUncompressed[i]), is(true));
        }
        // Assert
        String uncompressedContent = new String(uncompressed, StandardCharsets.US_ASCII);
        assertThat(uncompressedContent, containsString("% matrix llx lly urx ury string")); // Near the end of the chunk
    }

    // the code is translated from python lznt, the data is generated by python lznt. It doesn't work.. Weird.. Debugging it.
    @Test
    public void testDecompression_py2java() throws IOException {
        byte[] compressed = FileSystemTestUtils.readFileToByteArray("/Users/tli01/work/nuix/jnode-fs/src/test/resources/org/jnode/fs/ntfs/compressed.bin");
        byte[] uncompressed = CompressedDataRunPyLznt1.decompress(compressed, false);

        byte[] expectedUncompressed = FileSystemTestUtils.readFileToByteArray("/Users/tli01/work/nuix/jnode-fs/src/test/resources/org/jnode/fs/ntfs/decompressed.bin");
        for (int i = 0; i < expectedUncompressed.length; i++) {
            assertThat((uncompressed[i] == expectedUncompressed[i]), is(true));
        }
        // Assert
        String uncompressedContent = new String(uncompressed, StandardCharsets.US_ASCII);
        assertThat(uncompressedContent, containsString("% matrix llx lly urx ury string")); // Near the end of the chunk
    }

    // the code is translated from python lznt, the data is extracted from E01. It doesn't work..Debugging it.
    @Test
    public void testDecompression() throws IOException {
        // Arrange
        byte[] data = FileSystemTestUtils.readFileToByteArray("/Users/tli01/work/nuix/jnode-fs/src/test/resources/org/jnode/fs/ntfs/compressed-E01.txt");
        byte[] compressed = new byte[data.length - 787];
        System.arraycopy(data, 787, compressed, 0, data.length - 787);
        byte[] uncompressed = CompressedDataRunPyLznt1.decompress(compressed, false);

        // Assert
        String uncompressedContent = new String(uncompressed, StandardCharsets.US_ASCII);
        assertThat(uncompressedContent, containsString("PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293")); // Near the end of the chunk
    }
}
